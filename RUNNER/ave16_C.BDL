/*
* ave16_C.BDL
# Design Name        ave16
# FU Library File    /proj/cad/cwb-6.1/packages/asic_45.FLIB
# MEM  Limit File    %AUTO%.MLMT
# Basic Library File /proj/cad/cwb-6.1/packages/asic_45.BLIB
# PORT Limit File    %AUTO%.PLMT
# PORT relation File %AUTO%.PREL
# Clock Cycle        100000 (1/10ps).
# Clock Uncertainty  0-->10000 (1/10ps)
# Performance index  max/min/ave  6 / 6 / 6.00
# Data-path info.    
# Bp-Option  ../benchmarks/ave16/ave16.c
# Option  -c1000 -s ave16.IFF -lfl /proj/cad/cwb-6.1/packages/asic_45.FLIB -lb /proj/cad/cwb-6.1/packages/asic_45.BLIB 
# Version  bdltran version : 6.10.04  Thu Mar 22 14:18:17 JST 2018
*/
in   unsigned ter(0:8)  in0 /* line# ../benchmarks/ave16/ave16.c:21 */;
unsigned var(0:8)  out0_1 /* line# ../benchmarks/ave16/ave16.c:22 */;
signed   mem(0:32)  data_0[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_1[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_2[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_3[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_4[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_5[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_6[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   mem(0:32)  data_7[2]/* Cyber rw_timing = rewe, array = RAM */ = {0, 0} /* line# ../benchmarks/ave16/ave16.c:23 */;
signed   var(0:32)  data_7_pio/* Cyber sig2reg_ex_force = data_7_pio, pipemem_io */;
signed   var(0:32)  data_7_pio1/* Cyber sig2reg_ex_force = data_7_pio1, pipemem_io */;
signed   var(0:32)  data_7_pio20/* Cyber sig2reg_ex_force = data_7_pio2, pipemem_io */;
signed   var(0:32)  data_6_pio/* Cyber sig2reg_ex_force = data_6_pio, pipemem_io */;
signed   var(0:32)  data_6_pio1/* Cyber sig2reg_ex_force = data_6_pio1, pipemem_io */;
signed   var(0:32)  data_6_pio20/* Cyber sig2reg_ex_force = data_6_pio2, pipemem_io */;
signed   var(0:32)  data_5_pio/* Cyber sig2reg_ex_force = data_5_pio, pipemem_io */;
signed   var(0:32)  data_5_pio1/* Cyber sig2reg_ex_force = data_5_pio1, pipemem_io */;
signed   var(0:32)  data_5_pio20/* Cyber sig2reg_ex_force = data_5_pio2, pipemem_io */;
signed   var(0:32)  data_4_pio/* Cyber sig2reg_ex_force = data_4_pio, pipemem_io */;
signed   var(0:32)  data_4_pio1/* Cyber sig2reg_ex_force = data_4_pio1, pipemem_io */;
signed   var(0:32)  data_4_pio20/* Cyber sig2reg_ex_force = data_4_pio2, pipemem_io */;
signed   var(0:32)  data_3_pio/* Cyber sig2reg_ex_force = data_3_pio, pipemem_io */;
signed   var(0:32)  data_3_pio1/* Cyber sig2reg_ex_force = data_3_pio1, pipemem_io */;
signed   var(0:32)  data_3_pio20/* Cyber sig2reg_ex_force = data_3_pio2, pipemem_io */;
signed   var(0:32)  data_2_pio/* Cyber sig2reg_ex_force = data_2_pio, pipemem_io */;
signed   var(0:32)  data_2_pio1/* Cyber sig2reg_ex_force = data_2_pio1, pipemem_io */;
signed   var(0:32)  data_2_pio20/* Cyber sig2reg_ex_force = data_2_pio2, pipemem_io */;
signed   var(0:32)  data_1_pio/* Cyber sig2reg_ex_force = data_1_pio, pipemem_io */;
signed   var(0:32)  data_1_pio1/* Cyber sig2reg_ex_force = data_1_pio1, pipemem_io */;
signed   var(0:32)  data_1_pio20/* Cyber sig2reg_ex_force = data_1_pio2, pipemem_io */;
signed   var(0:32)  data_0_pio/* Cyber sig2reg_ex_force = data_0_pio, pipemem_io */;
signed   var(0:32)  data_0_pio10/* Cyber sig2reg_ex_force = data_0_pio1, pipemem_io */;
signed   var(0:32)  data_0_pio2/* Cyber sig2reg_ex_force = data_0_pio2, pipemem_io */;
signed   reg(0:32)  data_0_pio20/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_0_pio2 */;
signed   reg(0:32)  data_0_pio1/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_0_pio1 */;
signed   reg(0:32)  data_0_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_0_pio */;
signed   reg(0:32)  data_1_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_1_pio2 */;
signed   reg(0:32)  data_1_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_1_pio1 */;
signed   reg(0:32)  data_1_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_1_pio */;
signed   reg(0:32)  data_2_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_2_pio2 */;
signed   reg(0:32)  data_2_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_2_pio1 */;
signed   reg(0:32)  data_2_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_2_pio */;
signed   reg(0:32)  data_3_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_3_pio2 */;
signed   reg(0:32)  data_3_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_3_pio1 */;
signed   reg(0:32)  data_3_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_3_pio */;
signed   reg(0:32)  data_4_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_4_pio2 */;
signed   reg(0:32)  data_4_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_4_pio1 */;
signed   reg(0:32)  data_4_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_4_pio */;
signed   reg(0:32)  data_5_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_5_pio2 */;
signed   reg(0:32)  data_5_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_5_pio1 */;
signed   reg(0:32)  data_5_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_5_pio */;
signed   reg(0:32)  data_6_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_6_pio2 */;
signed   reg(0:32)  data_6_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_6_pio1 */;
signed   reg(0:32)  data_6_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_6_pio */;
signed   reg(0:32)  data_7_pio2/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_7_pio2 */;
signed   reg(0:32)  data_7_pio10/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_7_pio1 */;
signed   reg(0:32)  data_7_pio0/* Cyber reset_sig = void, other = DC, pipemem_io, sig2reg_ex_force = data_7_pio */;
unsigned reg(0:4)  RG_i/* Cyber reset_sig = void */ /* line# ../benchmarks/ave16/ave16.c:29 */;
unsigned reg(0:1)  RG_01/* Cyber reset_sig = void */;
unsigned reg(0:4)  RG_i_1/* Cyber reset_sig = void, other = DC */ /* line# ../benchmarks/ave16/ave16.c:29 */;
unsigned reg(0:3)  RG_03/* Cyber reset_sig = void, other = DC */;
signed   reg(0:32)  RG_04/* Cyber reset_sig = void, other = DC */;
out  unsigned port(0:8)  out0 /* line# ../benchmarks/ave16/ave16.c:22 */;

/* Cyber default_bit_order = up */
process
ave16()
{
    signed   ter(0:32)  M_89/* Cyber other = DC */;
    signed   ter(0:32)  M_88/* Cyber other = DC */;
    signed   ter(0:32)  M_87/* Cyber other = DC */;
    signed   ter(0:32)  M_86/* Cyber other = DC */;
    signed   ter(0:32)  M_85/* Cyber other = DC */;
    signed   ter(0:32)  M_84/* Cyber other = DC */;
    signed   ter(0:32)  M_83/* Cyber other = DC */;
    signed   ter(0:32)  M_82/* Cyber other = DC */;
    signed   ter(0:32)  M_81/* Cyber other = DC */;
    signed   ter(0:32)  M_80/* Cyber other = DC */;
    signed   ter(0:32)  M_79/* Cyber other = DC */;
    signed   ter(0:32)  M_78/* Cyber other = DC */;
    signed   ter(0:32)  M_77/* Cyber other = DC */;
    signed   ter(0:32)  M_76/* Cyber other = DC */;
    signed   ter(0:32)  M_75/* Cyber other = DC */;
    signed   ter(0:32)  M_74/* Cyber other = DC */;
    signed   ter(0:32)  M_73/* Cyber other = DC */;
    signed   ter(0:32)  M_72/* Cyber other = DC */;
    signed   ter(0:32)  M_71/* Cyber other = DC */;
    signed   ter(0:32)  M_70/* Cyber other = DC */;
    signed   ter(0:32)  M_69/* Cyber other = DC */;
    signed   ter(0:32)  M_68/* Cyber other = DC */;
    signed   ter(0:32)  M_67/* Cyber other = DC */;
    signed   ter(0:32)  M_66/* Cyber other = DC */;
    signed   ter(0:32)  M_62_t/* Cyber other = DC */;
    signed   ter(0:32)  M_61_t/* Cyber other = DC */;
    signed   ter(0:32)  M_60_t/* Cyber other = DC */;
    signed   ter(0:32)  M_57_t/* Cyber other = DC */;
    signed   ter(0:32)  M_54_t/* Cyber other = DC */;
    signed   ter(0:32)  M_53_t/* Cyber other = DC */;
    signed   ter(0:32)  M_50_t/* Cyber other = DC */;
    signed   ter(0:8)  out0_v1_t/* Cyber other = DC */;
    signed   ter(0:8)  M_321_t/* Cyber other = DC */;
    signed   ter(0:32)  sum_t/* Cyber other = DC */;
    signed   ter(0:32)  M_46_t/* Cyber other = DC */;
    signed   ter(0:32)  M_45_t/* Cyber other = DC */;
    signed   ter(0:32)  M_42_t/* Cyber other = DC */;
    signed   ter(0:32)  M_39_t/* Cyber other = DC */;
    signed   ter(0:32)  M_38_t/* Cyber other = DC */;
    signed   ter(0:32)  M_35_t/* Cyber other = DC */;
    unsigned ter(0:3)  CT_03/* Cyber other = DC */;
    unsigned ter(0:1)  JF_01;
    unsigned ter(0:1)  CT_02/* Cyber other = DC */;
    unsigned ter(0:1)  M_64_t/* Cyber other = DC */;
    signed   ter(0:32)  M_13_t/* Cyber other = DC */;
    unsigned ter(0:3)  CT_01/* Cyber other = DC */;
    unsigned ter(0:3)  M_65_t/* Cyber other = DC */;
    unsigned ter(0:4)  M_14_t/* Cyber other = DC */;
    unsigned var(0:3)  M_65;
    unsigned var(0:1)  M_64;
    unsigned var(0:4)  M_63;
    signed   var(0:8)  M_321;
    signed   var(0:8)  out0_v1 /* line# ../benchmarks/ave16/ave16.c:29 */;
    signed   var(0:32)  M_62;
    signed   var(0:32)  M_61;
    signed   var(0:32)  M_60;
    signed   var(0:32)  M_59;
    signed   var(0:32)  M_58;
    signed   var(0:32)  M_57;
    signed   var(0:32)  M_56;
    signed   var(0:32)  M_55;
    signed   var(0:32)  M_54;
    signed   var(0:32)  M_53;
    signed   var(0:32)  M_52;
    signed   var(0:32)  M_51;
    signed   var(0:32)  M_50;
    signed   var(0:32)  M_49;
    signed   var(0:32)  M_48;
    signed   var(0:32)  M_47;
    signed   var(0:32)  M_46;
    signed   var(0:32)  M_45;
    signed   var(0:32)  M_44;
    signed   var(0:32)  M_43;
    signed   var(0:32)  M_42;
    signed   var(0:32)  M_41;
    signed   var(0:32)  M_40;
    signed   var(0:32)  M_39;
    signed   var(0:32)  M_38;
    signed   var(0:32)  M_37;
    signed   var(0:32)  M_36;
    signed   var(0:32)  M_35;
    signed   var(0:32)  M_34;
    signed   var(0:32)  M_33;
    signed   var(0:32)  M_32;
    signed   var(0:32)  M_31;
    signed   var(0:32)  M_30;
    signed   var(0:32)  M_29;
    signed   var(0:32)  M_28;
    signed   var(0:32)  M_27;
    signed   var(0:32)  M_26;
    signed   var(0:32)  M_25;
    signed   var(0:32)  M_24;
    signed   var(0:32)  M_23;
    signed   var(0:32)  M_22;
    signed   var(0:32)  M_21;
    signed   var(0:32)  M_20;
    signed   var(0:32)  M_19;
    signed   var(0:32)  M_18;
    signed   var(0:32)  M_17;
    unsigned var(0:4)  i1 /* line# ../benchmarks/ave16/ave16.c:29 */;
    unsigned var(0:3)  M_16;
    unsigned var(0:1)  M_15;
    unsigned var(0:4)  M_14;
    signed   var(0:32)  M_13;
    unsigned var(0:3)  M_12;
    unsigned var(0:1)  M_11;
    unsigned var(0:4)  M_10;
    signed   var(0:32)  M_09;
    signed   var(0:32)  M_08;
    signed   var(0:32)  M_07;
    signed   var(0:32)  M_06;
    signed   var(0:32)  M_05;
    signed   var(0:32)  M_04;
    signed   var(0:32)  M_03;
    signed   var(0:32)  M_02;
    signed   var(0:32)  M_01;

    /* Cyber state = reset */
ST1_00 :
    goto ST1_01;
    $

ST1_01 :
    RG_i(0:4) = (signed ter(0:1))(-1(0:1)); 	/* line# ../benchmarks/ave16/ave16.c:32 */
    goto ST1_02;
    $

ST1_02 :
    data_0_pio1(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_1_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_2_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_3_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_4_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_5_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_6_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    data_7_pio2(0:32) = (signed ter(0:32))(0(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    switch (CT_01(0:3)) {	/* CAB */ 	/* line# ../benchmarks/ave16/ave16.c:33 */
    case 0 : 
        data_0[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 1 : 
        data_1[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 2 : 
        data_2[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 3 : 
        data_3[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 4 : 
        data_4[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 5 : 
        data_5[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 6 : 
        data_6[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 7 : 
        data_7[M_14_t(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    }
    CT_01(0:3) = M_14_t(1:3); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    RG_i_1(0:4) = (unsigned ter(0:4))((signed ter(0:4))(RG_i(0:4)) - 1); 	/* line# ../benchmarks/ave16/ave16.c:32 */
    RG_03(0:3) = M_65_t(0:3);
    M_14_t(0:4) = (unsigned ter(0:4))((signed ter(0:4))(RG_i(0:4)) - 1); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    M_65_t(0:3) = CT_01(0:3); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    goto ST1_03;
    $

ST1_03 :
    RG_i(0:4) = RG_i_1(0:4); 	/* line# ../benchmarks/ave16/ave16.c:32 */
    if (CT_02(0:1)) { 	/* line# ../benchmarks/ave16/ave16.c:32 */
        JF_01(0:1) = 1(0:1);
    }
    else {
        JF_01(0:1) = 0(0:1);
    }
    switch (CT_03(0:3)) {	/* CAB */ 	/* line# ../benchmarks/ave16/ave16.c:33 */
    case 0 : 
        data_0[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 1 : 
        data_1[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 2 : 
        data_2[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 3 : 
        data_3[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 4 : 
        data_4[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 5 : 
        data_5[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 6 : 
        data_6[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    case 7 : 
        data_7[RG_i(0:1)](0:32) = M_13_t(0:32); 	/* line# ../benchmarks/ave16/ave16.c:33 */
        break;
    }
    switch (RG_03(0:3)) {	/* CAB */ 	/* line# ../benchmarks/ave16/ave16.c:33 */
    case 0 : 
        M_13_t(0:32) = data_0[0(0:1)](0:32);
        break;
    case 1 : 
        M_13_t(0:32) = data_1[0(0:1)](0:32);
        break;
    case 2 : 
        M_13_t(0:32) = data_2[0(0:1)](0:32);
        break;
    case 3 : 
        M_13_t(0:32) = data_3[0(0:1)](0:32);
        break;
    case 4 : 
        M_13_t(0:32) = data_4[0(0:1)](0:32);
        break;
    case 5 : 
        M_13_t(0:32) = data_5[0(0:1)](0:32);
        break;
    case 6 : 
        M_13_t(0:32) = data_6[0(0:1)](0:32);
        break;
    case 7 : 
        M_13_t(0:32) = data_7[0(0:1)](0:32);
        break;
    }
    CT_02(0:1) = (unsigned ter(0:1))(|>RG_i_1(0:4)); 	/* line# ../benchmarks/ave16/ave16.c:32 */
    CT_03(0:3) = RG_i(1:3); 	/* line# ../benchmarks/ave16/ave16.c:33 */
    RG_01(0:1) = M_64_t(0:1);
    M_64_t(0:1) = CT_02(0:1); 	/* line# ../benchmarks/ave16/ave16.c:32 */
    /* Cyber sfdl_jump = exclusive */
    if (JF_01(0:1)) {
        goto ST1_02;
    }
    else {
        goto ST1_04;
    }
    $

ST1_04 :
    data_0[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:36 */
    data_7[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_6[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_5[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_4[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_3[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_2[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_1[(unsigned ter(0:1))(0(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    goto ST1_05;
    $

ST1_05 :
    M_46_t(0:32) = (signed ter(0:32))(M_42_t(0:32) + M_45_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    RG_04(0:32) = (signed ter(0:32))(M_39_t(0:32) + M_46_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:36,40 */
    data_7[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_6[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_5[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_4[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_3[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_2[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_1[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    data_0[(unsigned ter(0:1))(1(0:1))](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_74(0:32) = data_1[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:36,40 */
    M_75(0:32) = data_0[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:36,40 */
    M_35_t(0:32) = (signed ter(0:32))(M_75(0:32) + M_74(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:36,40 */
    M_76(0:32) = data_3[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_77(0:32) = data_2[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_38_t(0:32) = (signed ter(0:32))(M_77(0:32) + M_76(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_39_t(0:32) = (signed ter(0:32))(M_35_t(0:32) + M_38_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:36,40 */
    M_78(0:32) = data_5[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_79(0:32) = data_4[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_42_t(0:32) = (signed ter(0:32))(M_79(0:32) + M_78(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_80(0:32) = data_7[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_81(0:32) = data_6[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_45_t(0:32) = (signed ter(0:32))(M_81(0:32) + M_80(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    goto ST1_06;
    $

ST1_06 :
    M_62_t(0:32) = (signed ter(0:32))(M_54_t(0:32) + M_61_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    out0(0:8) = (unsigned ter(0:8))(out0_v1_t(0:8)); 	/* line# ../benchmarks/ave16/ave16.c:43 */
    sum_t(0:32) = (signed ter(0:32))(RG_04(0:32) + M_62_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_321_t(0:8) = (signed ter(0:8))(sum_t(20:8)); 	/* line# ../benchmarks/ave16/ave16.c:42 */
    out0_v1_t(0:8) = (signed ter(0:8))(M_321_t(0:8) + (signed ter(0:2))((sum_t(0:1) & (unsigned ter(0:1))(|>sum_t(28:4))))); 	/* line# ../benchmarks/ave16/ave16.c:42 */
    M_82(0:32) = data_1[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_83(0:32) = data_0[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_50_t(0:32) = (signed ter(0:32))(M_83(0:32) + M_82(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_84(0:32) = data_3[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_85(0:32) = data_2[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_53_t(0:32) = (signed ter(0:32))(M_85(0:32) + M_84(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_54_t(0:32) = (signed ter(0:32))(M_50_t(0:32) + M_53_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_86(0:32) = data_5[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_87(0:32) = data_4[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_57_t(0:32) = (signed ter(0:32))(M_87(0:32) + M_86(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_88(0:32) = data_7[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_89(0:32) = data_6[0(0:1)](0:32); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_60_t(0:32) = (signed ter(0:32))(M_89(0:32) + M_88(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    M_61_t(0:32) = (signed ter(0:32))(M_57_t(0:32) + M_60_t(0:32)); 	/* line# ../benchmarks/ave16/ave16.c:40 */
    goto ST1_01;
}

/*
#@FLIB /proj/cad/cwb-6.1/packages/asic_45.FLIB
#@LMT %AUTO%.LMT
##@CLK  100000
##@UNIT 1/10ps
##IDX NAME     LMT  KIND              BITW   DELAY  AREA
#  1  add8s      1  (s)+              8,9    3000     49
#  2  add32s     8  (s)+              32,33  10600   208
#  3  decr4s     2  (s)DECR           4,5    1500      9
#  4  delay_funit_1    1  @delay_funit_1    (32),32  1         0
#  5  delay_funit_2    1  @delay_funit_2    (32),32  1         0
#  6  delay_funit_3    1  @delay_funit_3    (32),32  1         0
#  7  delay_funit_4    1  @delay_funit_4    (32),32  1         0
#  8  delay_funit_5    1  @delay_funit_5    (32),32  1         0
#  9  delay_funit_6    1  @delay_funit_6    (32),32  1         0
# 10  delay_funit_7    1  @delay_funit_7    (32),32  1         0
# 11  delay_funit_8    1  @delay_funit_8    (32),32  1         0
# 12  delay_funit_9    1  @delay_funit_9    (32),32  1         0
# 13  delay_funit_10    1  @delay_funit_10   (32),32  1         0
# 14  delay_funit_11    1  @delay_funit_11   (32),32  1         0
# 15  delay_funit_12    1  @delay_funit_12   (32),32  1         0
# 16  delay_funit_13    1  @delay_funit_13   (32),32  1         0
# 17  delay_funit_14    1  @delay_funit_14   (32),32  1         0
# 18  delay_funit_15    1  @delay_funit_15   (32),32  1         0
# 19  delay_funit_16    1  @delay_funit_16   (32),32  1         0
# 20  delay_funit_17    1  @delay_funit_17   (32),32  1         0
# 21  delay_funit_18    1  @delay_funit_18   (32),32  1         0
# 22  delay_funit_19    1  @delay_funit_19   (32),32  1         0
# 23  delay_funit_20    1  @delay_funit_20   (32),32  1         0
# 24  delay_funit_21    1  @delay_funit_21   (32),32  1         0
# 25  delay_funit_22    1  @delay_funit_22   (32),32  1         0
# 26  delay_funit_23    1  @delay_funit_23   (32),32  1         0
# 27  delay_funit_24    1  @delay_funit_24   (32),32  1         0
#@END

#@MLIB %AUTO%.MLIB
##@VERSION { 3.00 }
##@LIB { ave16 }
##@UNIT  1/10ps 
#@MLIB {
#    NAME	MEMB32W2
#    KIND	R1,W1
#    BITWIDTH	32
#    DELAY	x2
#    WORD	2
#    WRITE_SYNC	YES
#    DEFMOD {
#        in             ter (0:1)      RA1              /* ra:1 */;
#        out            ter (0:32)     RD1              /* rd:1 */;
#        in             ter (0:1)      RE1              /* re:1 */;
#        in             ter (0:1)      RCLK1            /* rclk:1 */;
#        in             ter (0:1)      WA2              /* wa:2 */;
#        in             ter (0:32)     WD2              /* wd:2 */;
#        in             ter (0:1)      WE2              /* we:2 */;
#        in             ter (0:1)      WCLK2            /* wclk:2 */;
#    }
#}
##@END { ave16 }

#@MCNT %AUTO%.MCNT
##@VERSION { 3.00 }
##@CNT { ave16 }
#@MCNT {
#    NAME	MEMB32W2
#    LIMIT	8
#}
##@END { ave16 }

#@MLMT %AUTO%.MLMT
##@UNIT 1/10ps
##IDX NAME     LMT  KIND      BITW[xWORD]  DELAY  ARRAY_DIV_NAME
#  1  MEMB32W2    8  R1,W1            32x2   1x2                 	
#@END

#@BLIB /proj/cad/cwb-6.1/packages/asic_45.BLIB
##@VERSION{2.00}
##@LIB{CWBSTDBLIB}
##@UNIT 1/10ps
#@BLIB {
#    NAME	nmux2_1
#    KIND	nmux
#    WAY	2
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	6
#    PIN_PAIR	6
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux2_2
#    KIND	nmux
#    WAY	2
#    BITWIDTH	2
#    DELAY	900
#    AREA	3
#    NET	10
#    PIN_PAIR	12
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux2_4
#    KIND	nmux
#    WAY	2
#    BITWIDTH	4
#    DELAY	1100
#    AREA	9
#    NET	20
#    PIN_PAIR	26
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_8
#    KIND	nmux
#    WAY	2
#    BITWIDTH	8
#    DELAY	1400
#    AREA	16
#    NET	36
#    PIN_PAIR	50
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_16
#    KIND	nmux
#    WAY	2
#    BITWIDTH	16
#    DELAY	1600
#    AREA	32
#    NET	70
#    PIN_PAIR	100
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_32
#    KIND	nmux
#    WAY	2
#    BITWIDTH	32
#    DELAY	1700
#    AREA	64
#    NET	140
#    PIN_PAIR	202
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux2_64
#    KIND	nmux
#    WAY	2
#    BITWIDTH	64
#    DELAY	1500
#    AREA	128
#    NET	275
#    PIN_PAIR	401
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux4_1
#    KIND	nmux
#    WAY	4
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux4_2
#    KIND	nmux
#    WAY	4
#    BITWIDTH	2
#    DELAY	1000
#    AREA	6
#    NET	18
#    PIN_PAIR	22
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux4_4
#    KIND	nmux
#    WAY	4
#    BITWIDTH	4
#    DELAY	1200
#    AREA	17
#    NET	36
#    PIN_PAIR	48
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_8
#    KIND	nmux
#    WAY	4
#    BITWIDTH	8
#    DELAY	1500
#    AREA	30
#    NET	64
#    PIN_PAIR	92
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_16
#    KIND	nmux
#    WAY	4
#    BITWIDTH	16
#    DELAY	1700
#    AREA	61
#    NET	124
#    PIN_PAIR	184
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_32
#    KIND	nmux
#    WAY	4
#    BITWIDTH	32
#    DELAY	1900
#    AREA	121
#    NET	248
#    PIN_PAIR	372
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_64
#    KIND	nmux
#    WAY	4
#    BITWIDTH	64
#    DELAY	1600
#    AREA	242
#    NET	490
#    PIN_PAIR	742
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_1
#    KIND	nmux
#    WAY	8
#    BITWIDTH	1
#    DELAY	1000
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_2
#    KIND	nmux
#    WAY	8
#    BITWIDTH	2
#    DELAY	1300
#    AREA	13
#    NET	34
#    PIN_PAIR	42
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_4
#    KIND	nmux
#    WAY	8
#    BITWIDTH	4
#    DELAY	1600
#    AREA	31
#    NET	66
#    PIN_PAIR	90
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_8
#    KIND	nmux
#    WAY	8
#    BITWIDTH	8
#    DELAY	1700
#    AREA	59
#    NET	120
#    PIN_PAIR	176
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_16
#    KIND	nmux
#    WAY	8
#    BITWIDTH	16
#    DELAY	2000
#    AREA	119
#    NET	232
#    PIN_PAIR	352
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_32
#    KIND	nmux
#    WAY	8
#    BITWIDTH	32
#    DELAY	2200
#    AREA	233
#    NET	463
#    PIN_PAIR	711
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux8_64
#    KIND	nmux
#    WAY	8
#    BITWIDTH	64
#    DELAY	1800
#    AREA	460
#    NET	906
#    PIN_PAIR	1410
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_1
#    KIND	nmux
#    WAY	16
#    BITWIDTH	1
#    DELAY	1500
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux16_2
#    KIND	nmux
#    WAY	16
#    BITWIDTH	2
#    DELAY	1700
#    AREA	33
#    NET	80
#    PIN_PAIR	96
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_4
#    KIND	nmux
#    WAY	16
#    BITWIDTH	4
#    DELAY	1900
#    AREA	76
#    NET	155
#    PIN_PAIR	203
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_8
#    KIND	nmux
#    WAY	16
#    BITWIDTH	8
#    DELAY	2200
#    AREA	127
#    NET	248
#    PIN_PAIR	360
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_16
#    KIND	nmux
#    WAY	16
#    BITWIDTH	16
#    DELAY	2400
#    AREA	255
#    NET	480
#    PIN_PAIR	720
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_32
#    KIND	nmux
#    WAY	16
#    BITWIDTH	32
#    DELAY	2700
#    AREA	506
#    NET	967
#    PIN_PAIR	1463
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux16_64
#    KIND	nmux
#    WAY	16
#    BITWIDTH	64
#    DELAY	2300
#    AREA	995
#    NET	1878
#    PIN_PAIR	2886
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux32_1
#    KIND	nmux
#    WAY	32
#    BITWIDTH	1
#    DELAY	1700
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_2
#    KIND	nmux
#    WAY	32
#    BITWIDTH	2
#    DELAY	1900
#    AREA	56
#    NET	138
#    PIN_PAIR	170
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_4
#    KIND	nmux
#    WAY	32
#    BITWIDTH	4
#    DELAY	2300
#    AREA	115
#    NET	248
#    PIN_PAIR	344
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_8
#    KIND	nmux
#    WAY	32
#    BITWIDTH	8
#    DELAY	2400
#    AREA	251
#    NET	488
#    PIN_PAIR	712
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux32_16
#    KIND	nmux
#    WAY	32
#    BITWIDTH	16
#    DELAY	2600
#    AREA	502
#    NET	944
#    PIN_PAIR	1424
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux32_32
#    KIND	nmux
#    WAY	32
#    BITWIDTH	32
#    DELAY	2900
#    AREA	982
#    NET	1877
#    PIN_PAIR	2869
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux32_64
#    KIND	nmux
#    WAY	32
#    BITWIDTH	64
#    DELAY	2700
#    AREA	1946
#    NET	3660
#    PIN_PAIR	5676
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_1
#    KIND	nmux
#    WAY	64
#    BITWIDTH	1
#    DELAY	1800
#    AREA	56
#    NET	171
#    PIN_PAIR	171
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_2
#    KIND	nmux
#    WAY	64
#    BITWIDTH	2
#    DELAY	2000
#    AREA	113
#    NET	278
#    PIN_PAIR	342
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_4
#    KIND	nmux
#    WAY	64
#    BITWIDTH	4
#    DELAY	2500
#    AREA	228
#    NET	494
#    PIN_PAIR	686
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_8
#    KIND	nmux
#    WAY	64
#    BITWIDTH	8
#    DELAY	2500
#    AREA	504
#    NET	984
#    PIN_PAIR	1432
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_16
#    KIND	nmux
#    WAY	64
#    BITWIDTH	16
#    DELAY	2600
#    AREA	1008
#    NET	1904
#    PIN_PAIR	2864
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_32
#    KIND	nmux
#    WAY	64
#    BITWIDTH	32
#    DELAY	3100
#    AREA	1955
#    NET	3755
#    PIN_PAIR	5739
#    LSTAGE	6
#}
#@BLIB {
#    NAME	nmux64_64
#    KIND	nmux
#    WAY	64
#    BITWIDTH	64
#    DELAY	2800
#    AREA	3917
#    NET	7434
#    PIN_PAIR	11466
#    LSTAGE	6
#}
#@BLIB {
#    NAME	reg1
#    KIND	reg
#    BITWIDTH	1
#    AREA	6
#    NET	5
#    PIN_PAIR	5
#}
#@BLIB {
#    NAME	reg4
#    KIND	reg
#    BITWIDTH	4
#    AREA	24
#    NET	14
#    PIN_PAIR	20
#}
#@BLIB {
#    NAME	reg8
#    KIND	reg
#    BITWIDTH	8
#    AREA	48
#    NET	26
#    PIN_PAIR	40
#}
#@BLIB {
#    NAME	dec2
#    KIND	dec
#    BITWIDTH	2
#    DELAY	200
#    AREA	1
#    NET	2
#    PIN_PAIR	3
#}
#@BLIB {
#    NAME	dec4
#    KIND	dec
#    BITWIDTH	4
#    DELAY	900
#    AREA	5
#    NET	10
#    PIN_PAIR	16
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec8
#    KIND	dec
#    BITWIDTH	8
#    DELAY	1300
#    AREA	14
#    NET	18
#    PIN_PAIR	39
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dec16
#    KIND	dec
#    BITWIDTH	16
#    DELAY	1300
#    AREA	25
#    NET	37
#    PIN_PAIR	74
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec32
#    KIND	dec
#    BITWIDTH	32
#    DELAY	1800
#    AREA	42
#    NET	58
#    PIN_PAIR	138
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec64
#    KIND	dec
#    BITWIDTH	64
#    DELAY	2000
#    AREA	78
#    NET	100
#    PIN_PAIR	258
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dec128
#    KIND	dec
#    BITWIDTH	128
#    DELAY	2500
#    AREA	149
#    NET	194
#    PIN_PAIR	483
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux2_1
#    KIND	dmux
#    WAY	2
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	4
#    PIN_PAIR	4
#    LSTAGE	1
#}
#@BLIB {
#    NAME	dmux2_16
#    KIND	dmux
#    WAY	2
#    BITWIDTH	16
#    DELAY	2000
#    AREA	32
#    NET	69
#    PIN_PAIR	100
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dmux4_1
#    KIND	dmux
#    WAY	4
#    BITWIDTH	1
#    DELAY	1700
#    AREA	5
#    NET	11
#    PIN_PAIR	15
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dmux4_16
#    KIND	dmux
#    WAY	4
#    BITWIDTH	16
#    DELAY	2500
#    AREA	64
#    NET	128
#    PIN_PAIR	194
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux8_1
#    KIND	dmux
#    WAY	8
#    BITWIDTH	1
#    DELAY	2800
#    AREA	11
#    NET	22
#    PIN_PAIR	33
#    LSTAGE	4
#}
#@BLIB {
#    NAME	dmux8_16
#    KIND	dmux
#    WAY	8
#    BITWIDTH	16
#    DELAY	3400
#    AREA	127
#    NET	240
#    PIN_PAIR	381
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux16_1
#    KIND	dmux
#    WAY	16
#    BITWIDTH	1
#    DELAY	3000
#    AREA	23
#    NET	43
#    PIN_PAIR	65
#    LSTAGE	6
#}
#@BLIB {
#    NAME	dmux16_16
#    KIND	dmux
#    WAY	16
#    BITWIDTH	16
#    DELAY	3800
#    AREA	275
#    NET	499
#    PIN_PAIR	787
#    LSTAGE	9
#}
#@BLIB {
#    NAME	dmux64_1
#    KIND	dmux
#    WAY	64
#    BITWIDTH	1
#    DELAY	4300
#    AREA	87
#    NET	146
#    PIN_PAIR	234
#    LSTAGE	8
#}
#@BLIB {
#    NAME	dmux64_16
#    KIND	dmux
#    WAY	64
#    BITWIDTH	16
#    DELAY	4800
#    AREA	1075
#    NET	1971
#    PIN_PAIR	3081
#    LSTAGE	9
#}
#@BLIB {
#    NAME	dmux256_1
#    KIND	dmux
#    WAY	256
#    BITWIDTH	1
#    DELAY	5300
#    AREA	286
#    NET	519
#    PIN_PAIR	819
#    LSTAGE	11
#}
#@BLIB {
#    NAME	dmux256_16
#    KIND	dmux
#    WAY	256
#    BITWIDTH	16
#    DELAY	5900
#    AREA	4243
#    NET	7774
#    PIN_PAIR	12168
#    LSTAGE	16
#}
#@BLIB {
#    NAME	inv
#    KIND	inv
#    BITWIDTH	1
#    DELAY	300
#    AREA	1
#    NET	2
#    PIN_PAIR	2
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and2
#    KIND	and
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and4
#    KIND	and
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and8
#    KIND	and
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	900
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	and16
#    KIND	and
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1300
#    AREA	7
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	and32
#    KIND	and
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1400
#    AREA	16
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	and64
#    KIND	and
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	2000
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	and256
#    KIND	and
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2700
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	or2
#    KIND	or
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	or4
#    KIND	or
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	or8
#    KIND	or
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	or16
#    KIND	or
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1100
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	or32
#    KIND	or
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1500
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	or64
#    KIND	or
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	1700
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	or256
#    KIND	or
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2000
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	xor2
#    KIND	xor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	7
#    PIN_PAIR	9
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xor4
#    KIND	xor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1600
#    AREA	6
#    NET	11
#    PIN_PAIR	13
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xor8
#    KIND	xor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	2400
#    AREA	11
#    NET	15
#    PIN_PAIR	15
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xor16
#    KIND	xor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	4800
#    AREA	32
#    NET	48
#    PIN_PAIR	56
#    LSTAGE	8
#}
#@BLIB {
#    NAME	xor32
#    KIND	xor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	4500
#    AREA	49
#    NET	63
#    PIN_PAIR	63
#    LSTAGE	5
#}
#@BLIB {
#    NAME	xor64
#    KIND	xor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	5400
#    AREA	100
#    NET	127
#    PIN_PAIR	127
#    LSTAGE	6
#}
#@BLIB {
#    NAME	xor256
#    KIND	xor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	7200
#    AREA	406
#    NET	511
#    PIN_PAIR	511
#    LSTAGE	8
#}
#@BLIB {
#    NAME	nand2
#    KIND	nand
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	400
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nand4
#    KIND	nand
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	600
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nand8
#    KIND	nand
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	1100
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nand16
#    KIND	nand
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1700
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nand32
#    KIND	nand
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1600
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nand64
#    KIND	nand
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	1800
#    AREA	27
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nand256
#    KIND	nand
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	3000
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nor2
#    KIND	nor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nor4
#    KIND	nor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1000
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nor8
#    KIND	nor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	1400
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nor16
#    KIND	nor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1600
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nor32
#    KIND	nor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1800
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nor64
#    KIND	nor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	2300
#    AREA	27
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nor256
#    KIND	nor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2900
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	xnor2
#    KIND	xnor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	7
#    PIN_PAIR	9
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xnor4
#    KIND	xnor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1600
#    AREA	4
#    NET	7
#    PIN_PAIR	7
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xnor8
#    KIND	xnor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	2600
#    AREA	11
#    NET	15
#    PIN_PAIR	15
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xnor16
#    KIND	xnor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	4200
#    AREA	42
#    NET	58
#    PIN_PAIR	75
#    LSTAGE	13
#}
#@BLIB {
#    NAME	xnor32
#    KIND	xnor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	4500
#    AREA	49
#    NET	63
#    PIN_PAIR	63
#    LSTAGE	5
#}
#@BLIB {
#    NAME	xnor64
#    KIND	xnor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	5400
#    AREA	100
#    NET	127
#    PIN_PAIR	127
#    LSTAGE	6
#}
#@BLIB {
#    NAME	xnor256
#    KIND	xnor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	7200
#    AREA	406
#    NET	511
#    PIN_PAIR	511
#    LSTAGE	8
#}
#@BLIB {
#    NAME	consttable2_8
#    KIND	consttable
#    SIZE	2
#    BITWIDTH	8
#    DELAY	200
#    AREA	1
#    NET	4
#    PIN_PAIR	9
#}
#@BLIB {
#    NAME	consttable2_32
#    KIND	consttable
#    SIZE	2
#    BITWIDTH	32
#    DELAY	600
#    AREA	1
#    NET	5
#    PIN_PAIR	34
#    LSTAGE	1
#}
#@BLIB {
#    NAME	consttable16_8
#    KIND	consttable
#    SIZE	16
#    BITWIDTH	8
#    DELAY	3000
#    AREA	50
#    NET	53
#    PIN_PAIR	122
#    LSTAGE	6
#}
#@BLIB {
#    NAME	consttable16_32
#    KIND	consttable
#    SIZE	16
#    BITWIDTH	32
#    DELAY	3400
#    AREA	120
#    NET	130
#    PIN_PAIR	317
#    LSTAGE	9
#}
#@BLIB {
#    NAME	consttable64_8
#    KIND	consttable
#    SIZE	64
#    BITWIDTH	8
#    DELAY	4900
#    AREA	146
#    NET	162
#    PIN_PAIR	387
#    LSTAGE	9
#}
#@BLIB {
#    NAME	consttable64_32
#    KIND	consttable
#    SIZE	64
#    BITWIDTH	32
#    DELAY	5000
#    AREA	392
#    NET	434
#    PIN_PAIR	1020
#    LSTAGE	13
#}
#@BLIB {
#    NAME	consttable256_8
#    KIND	consttable
#    SIZE	256
#    BITWIDTH	8
#    DELAY	6100
#    AREA	476
#    NET	482
#    PIN_PAIR	1203
#    LSTAGE	14
#}
#@BLIB {
#    NAME	consttable256_32
#    KIND	consttable
#    SIZE	256
#    BITWIDTH	32
#    DELAY	5800
#    AREA	1350
#    NET	1466
#    PIN_PAIR	3523
#    LSTAGE	12
#}
##@END{CWBSTDBLIB}
#@END
*/
