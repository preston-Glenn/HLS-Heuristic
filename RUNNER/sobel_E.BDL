/*
* sobel_E.BDL
# Design Name        sobel
# FU Library File    /proj/cad/cwb-6.1/packages/asic_45.FLIB
# MEM  Limit File    %AUTO%.MLMT
# Basic Library File /proj/cad/cwb-6.1/packages/asic_45.BLIB
# PORT Limit File    %AUTO%.PLMT
# PORT relation File %AUTO%.PREL
# Clock Cycle        100000 (1/10ps).
# Clock Uncertainty  0-->10000 (1/10ps)
# Performance index  max/min/ave  3 / 2 / 2.50
# Data-path info.    REG: 708(area),118(FFs), MUX: 466(area),476(fanins)
# CSV info.          1636,3,624,708,280,9,2978,1372,3,2,2.50,15,0,2.66ns,-,-,-,-,4,-,-
# Bp-Option  ../benchmarks/sobel/sobel.c -process=sobel
# Option  -c1000 -s sobel.IFF -lfl /proj/cad/cwb-6.1/packages/asic_45.FLIB -lb /proj/cad/cwb-6.1/packages/asic_45.BLIB 
# Version  bdltran version : 6.10.04  Thu Mar 22 14:18:17 JST 2018
*/

in   unsigned ter(0:8)  input_row_a00 /* line# ../benchmarks/sobel/sobel.c:43 */;
in   unsigned ter(0:8)  input_row_a01 /* line# ../benchmarks/sobel/sobel.c:43 */;
in   unsigned ter(0:8)  input_row_a02 /* line# ../benchmarks/sobel/sobel.c:43 */;
out  unsigned ter(0:8)  sobel_ret/* Cyber sche = reg */ /* line# ../benchmarks/sobel/sobel.c:43 */;
clock         CLOCK/* Cyber clock_edge = pos */;
reset         RESET/* Cyber reset_mode = async, reset_active = high */;
    
unsigned const ter(0:2)  ST1_01 = 0;
unsigned const ter(0:2)  ST1_02 = 1;
unsigned const ter(0:2)  ST1_03 = 2;

/* Cyber default_bit_order = up, func = process */
process
sobel()
{
    unsigned ter(0:2)  M_49/* Cyber other = DC */;
    unsigned ter(0:8)  TR_01/* Cyber other = DC */;
    unsigned reg(0:2)  B01_streg/* Cyber FSM = reg */;
    unsigned ter(0:1)  C_02;
    unsigned ter(0:1)  C_01;
    unsigned ter(0:1)  U_02;
    unsigned ter(0:1)  ST1_03d/* Cyber FSM = dec */;
    unsigned ter(0:1)  ST1_02d/* Cyber FSM = dec */;
    unsigned ter(0:1)  ST1_01d/* Cyber FSM = dec */;
    unsigned ter(0:8)  line_buffer_2_a_rd00/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:3)  line_buffer_2_a_d01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:2)  line_buffer_2_a_ad01/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_2_a_rg02 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_2_a_rg01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_2_a_rg00 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:8)  line_buffer_1_a_rd00/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:3)  line_buffer_1_a_d01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:2)  line_buffer_1_a_ad01/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_1_a_rg02 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_1_a_rg01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_1_a_rg00 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:8)  line_buffer_0_a_rd00/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:3)  line_buffer_0_a_d01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:2)  line_buffer_0_a_ad01/* Cyber other = DC */ /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_0_a_rg02 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_0_a_rg01 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned reg(0:8)  line_buffer_0_a_rg00 /* line# ../benchmarks/sobel/sobel.c:30 */;
    unsigned ter(0:2)  addsub12s_11_102_f/* Cyber other = DC */;
    signed   ter(0:11)  addsub12s_11_102i2/* Cyber other = DC */;
    signed   ter(0:2)  addsub12s_11_102i1/* Cyber other = DC */;
    signed   ter(0:10)  addsub12s_11_102ot;
    unsigned ter(0:2)  addsub12s_11_101_f/* Cyber other = DC */;
    signed   ter(0:11)  addsub12s_11_101i2/* Cyber other = DC */;
    signed   ter(0:2)  addsub12s_11_101i1/* Cyber other = DC */;
    signed   ter(0:10)  addsub12s_11_101ot;
    unsigned ter(0:2)  addsub12u_11_10_11_f/* Cyber other = DC */;
    unsigned ter(0:9)  addsub12u_11_10_11i2/* Cyber other = DC */;
    unsigned ter(0:8)  addsub12u_11_10_11i1/* Cyber other = DC */;
    unsigned ter(0:10)  addsub12u_11_10_11ot;
    unsigned ter(0:2)  addsub12u_11_101_f/* Cyber other = DC */;
    unsigned ter(0:9)  addsub12u_11_101i2/* Cyber other = DC */;
    unsigned ter(0:9)  addsub12u_11_101i1/* Cyber other = DC */;
    unsigned ter(0:10)  addsub12u_11_101ot;
    unsigned ter(0:2)  addsub12u_11_111_f/* Cyber other = DC */;
    unsigned ter(0:9)  addsub12u_11_111i2/* Cyber other = DC */;
    unsigned ter(0:10)  addsub12u_11_111i1/* Cyber other = DC */;
    unsigned ter(0:11)  addsub12u_11_111ot;
    unsigned ter(0:7)  add8u_91i2/* Cyber other = DC */;
    unsigned ter(0:8)  add8u_91i1/* Cyber other = DC */;
    unsigned ter(0:9)  add8u_91ot;
    unsigned ter(0:2)  addsub12s_111_f/* Cyber other = DC */;
    signed   ter(0:11)  addsub12s_111i2/* Cyber other = DC */;
    signed   ter(0:10)  addsub12s_111i1/* Cyber other = DC */;
    signed   ter(0:11)  addsub12s_111ot;
    unsigned ter(0:2)  addsub12u_111_f/* Cyber other = DC */;
    unsigned ter(0:10)  addsub12u_111i2/* Cyber other = DC */;
    unsigned ter(0:10)  addsub12u_111i1/* Cyber other = DC */;
    unsigned ter(0:11)  addsub12u_111ot;
    unsigned ter(0:2)  decr2u_12i1/* Cyber other = DC */;
    unsigned ter(0:1)  decr2u_12ot;
    unsigned ter(0:2)  decr2u_11i1/* Cyber other = DC */;
    unsigned ter(0:1)  decr2u_11ot;
    unsigned ter(0:8)  add8u3i2/* Cyber other = DC */;
    unsigned ter(0:8)  add8u3i1/* Cyber other = DC */;
    unsigned ter(0:9)  add8u3ot;
    unsigned ter(0:8)  add8u2i2/* Cyber other = DC */;
    unsigned ter(0:8)  add8u2i1/* Cyber other = DC */;
    unsigned ter(0:9)  add8u2ot;
    unsigned ter(0:8)  add8u1i2/* Cyber other = DC */;
    unsigned ter(0:8)  add8u1i1/* Cyber other = DC */;
    unsigned ter(0:9)  add8u1ot;
    unsigned ter(0:8)  SUM2_t/* Cyber other = DC */;
    unsigned ter(0:10)  sumY1_t1/* Cyber other = DC */;
    unsigned ter(0:10)  sumX1_t1/* Cyber other = DC */;
    unsigned reg(0:8)  RG_00/* Cyber reset_sig = void */ /* line# ../benchmarks/sobel/sobel.c:43 */;
    unsigned reg(0:8)  RG_01/* Cyber reset_sig = void */ /* line# ../benchmarks/sobel/sobel.c:43 */;
    unsigned reg(0:8)  RG_02/* Cyber reset_sig = void */ /* line# ../benchmarks/sobel/sobel.c:43 */;
    unsigned reg(0:2)  RG_Y/* Cyber reset_sig = void, other = DC */ /* line# ../benchmarks/sobel/sobel.c:46 */;
    unsigned reg(0:10)  RG_04/* Cyber reset_sig = void, other = DC */;
    unsigned reg(0:8)  sobel_ret_r /* line# ../benchmarks/sobel/sobel.c:43 */;

ST1_01 :
    addsub12s_11_101ot(0:10) ::= addsub12s_11_10@1(addsub12s_11_101i1(0:2), addsub12s_11_101i2(0:11), addsub12s_11_101_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:92 */
    addsub12s_11_102ot(0:10) ::= addsub12s_11_10@2(addsub12s_11_102i1(0:2), addsub12s_11_102i2(0:11), addsub12s_11_102_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:95 */
    addsub12u_11_10_11ot(0:10) ::= addsub12u_11_10_1@1(addsub12u_11_10_11i1(0:8), addsub12u_11_10_11i2(0:9), addsub12u_11_10_11_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    addsub12u_11_101ot(0:10) ::= addsub12u_11_10@1(addsub12u_11_101i1(0:9), addsub12u_11_101i2(0:9), addsub12u_11_101_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    addsub12u_11_111ot(0:11) ::= addsub12u_11_11@1(addsub12u_11_111i1(0:10), addsub12u_11_111i2(0:9), addsub12u_11_111_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    add8u_91ot(0:9) ::= add8u_9@1(add8u_91i1(0:8), add8u_91i2(0:7)); 	/* line# ../benchmarks/sobel/sobel.c:71,85,86 */
    addsub12s_111ot(0:11) ::= addsub12s_11@1(addsub12s_111i1(0:10), addsub12s_111i2(0:11), addsub12s_111_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:86 */
    addsub12u_111ot(0:11) ::= addsub12u_11@1(addsub12u_111i1(0:10), addsub12u_111i2(0:10), addsub12u_111_f(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    decr2u_11ot(0:1) ::= decr2u_1@1(decr2u_11i1(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:66 */
    decr2u_12ot(0:1) ::= decr2u_1@2(decr2u_12i1(0:2)); 	/* line# ../benchmarks/sobel/sobel.c:64 */
    add8u1ot(0:9) ::= add8u@1(add8u1i1(0:8), add8u1i2(0:8)); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
    add8u2ot(0:9) ::= add8u@2(add8u2i1(0:8), add8u2i2(0:8)); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    add8u3ot(0:9) ::= add8u@3(add8u3i1(0:8), add8u3i2(0:8)); 	/* line# ../benchmarks/sobel/sobel.c:98 */
    sobel_ret(0:8) ::= sobel_ret_r(0:8); 	/* line# ../benchmarks/sobel/sobel.c:43 */
    line_buffer_0_a_d01(0:3) ::= (unsigned ter(0:4))(decoder(line_buffer_0_a_ad01(0:2))); 	/* line# ../benchmarks/sobel/sobel.c:30 */
    line_buffer_0_a_rd00(0:8) ::= dmux (RG_Y(0:2)) { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        case 0 :  line_buffer_0_a_rg00(0:8);
        case 1 :  line_buffer_0_a_rg01(0:8);
        case 2 :  line_buffer_0_a_rg02(0:8);
    };
    line_buffer_0_a_rg00(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_0_a_d01(0:1))) :  line_buffer_0_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_0_a_rg00(0:8);
    };
    line_buffer_0_a_rg01(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_0_a_d01(1:1))) :  line_buffer_0_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_0_a_rg01(0:8);
    };
    line_buffer_0_a_rg02(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_0_a_d01(2:1))) :  line_buffer_0_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default : 
            nmux {
                when (ST1_03d(0:1)) :  RG_02(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71 */
                default :  line_buffer_0_a_rg02(0:8);
            };
    };
    line_buffer_1_a_d01(0:3) ::= (unsigned ter(0:4))(decoder(line_buffer_1_a_ad01(0:2))); 	/* line# ../benchmarks/sobel/sobel.c:30 */
    line_buffer_1_a_rd00(0:8) ::= dmux (RG_Y(0:2)) { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        case 0 :  line_buffer_1_a_rg00(0:8);
        case 1 :  line_buffer_1_a_rg01(0:8);
        case 2 :  line_buffer_1_a_rg02(0:8);
    };
    line_buffer_1_a_rg00(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_1_a_d01(0:1))) :  line_buffer_1_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_1_a_rg00(0:8);
    };
    line_buffer_1_a_rg01(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_1_a_d01(1:1))) :  line_buffer_1_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_1_a_rg01(0:8);
    };
    line_buffer_1_a_rg02(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_1_a_d01(2:1))) :  line_buffer_1_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default : 
            nmux {
                when (ST1_03d(0:1)) :  RG_01(0:8); 	/* line# ../benchmarks/sobel/sobel.c:72 */
                default :  line_buffer_1_a_rg02(0:8);
            };
    };
    line_buffer_2_a_d01(0:3) ::= (unsigned ter(0:4))(decoder(line_buffer_2_a_ad01(0:2))); 	/* line# ../benchmarks/sobel/sobel.c:30 */
    line_buffer_2_a_rd00(0:8) ::= dmux (RG_Y(0:2)) { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        case 0 :  line_buffer_2_a_rg00(0:8);
        case 1 :  line_buffer_2_a_rg01(0:8);
        case 2 :  line_buffer_2_a_rg02(0:8);
    };
    line_buffer_2_a_rg00(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_2_a_d01(0:1))) :  line_buffer_2_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_2_a_rg00(0:8);
    };
    line_buffer_2_a_rg01(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_2_a_d01(1:1))) :  line_buffer_2_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default :  line_buffer_2_a_rg01(0:8);
    };
    line_buffer_2_a_rg02(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:30,66 */
        when ((unsigned ter(0:1))(ST1_02d(0:1) & line_buffer_2_a_d01(2:1))) :  line_buffer_2_a_rd00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:66 */
        default : 
            nmux {
                when (ST1_03d(0:1)) :  RG_00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:73 */
                default :  line_buffer_2_a_rg02(0:8);
            };
    };
    RG_04(0:10) ::= addsub12u_11_111ot(1:10); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    add8u1i1(0:8) ::= RG_00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
    add8u1i2(0:8) ::= line_buffer_2_a_rg00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
    add8u2i1(0:8) ::= line_buffer_0_a_rg00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:85,86 */
    add8u2i2(0:8) ::= line_buffer_2_a_rg00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:85,86 */
    decr2u_11i1(0:2) ::= RG_Y(0:2); 	/* line# ../benchmarks/sobel/sobel.c:66 */
    decr2u_12i1(0:2) ::= RG_Y(0:2); 	/* line# ../benchmarks/sobel/sobel.c:64 */
    addsub12u_111i1(0:10) ::= RG_04(0:10); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    addsub12u_111i2(0:10) ::= addsub12u_11_101ot(0:10); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    addsub12u_111_f(0:2) ::= 2(0:2);
    addsub12s_111i1(0:10) ::= addsub12u_11_10_11ot(0:10); 	/* line# ../benchmarks/sobel/sobel.c:86 */
    addsub12s_111i2(0:11) ::= addsub12u_11_111ot(0:11); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
    addsub12s_111_f(0:2) ::= 1(0:2);
    add8u_91i1(0:8) ::= line_buffer_0_a_rg01(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,85,86 */
    add8u_91i2(0:7) ::= RG_02(0:7); 	/* line# ../benchmarks/sobel/sobel.c:71,85,86 */
    addsub12u_11_101i1(0:9) ::= add8u2ot(0:9); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    addsub12u_11_101i2(0:9) ::= line_buffer_1_a_rg00(0:8) :: 0(0:1); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    addsub12u_11_101_f(0:2) ::= 1(0:2);
    addsub12s_11_101i1(0:2) ::= 0(0:2); 	/* line# ../benchmarks/sobel/sobel.c:92 */
    addsub12s_11_101i2(0:11) ::= addsub12u_111ot(0:11); 	/* line# ../benchmarks/sobel/sobel.c:85,92 */
    addsub12s_11_101_f(0:2) ::= 2(0:2);
    addsub12s_11_102i1(0:2) ::= 0(0:2); 	/* line# ../benchmarks/sobel/sobel.c:95 */
    addsub12s_11_102i2(0:11) ::= addsub12s_111ot(0:11); 	/* line# ../benchmarks/sobel/sobel.c:86,95 */
    addsub12s_11_102_f(0:2) ::= 2(0:2);
    line_buffer_0_a_ad01(0:2) ::= 0(0:1) :: decr2u_11ot(0:1); 	/* line# ../benchmarks/sobel/sobel.c:66 */
    line_buffer_1_a_ad01(0:2) ::= 0(0:1) :: decr2u_11ot(0:1); 	/* line# ../benchmarks/sobel/sobel.c:66 */
    line_buffer_2_a_ad01(0:2) ::= 0(0:1) :: decr2u_11ot(0:1); 	/* line# ../benchmarks/sobel/sobel.c:66 */
    U_02(0:1) ::= (unsigned ter(0:1))(ST1_02d(0:1) & ~decr2u_12ot(0:1)); 	/* line# ../benchmarks/sobel/sobel.c:64 */
    C_01(0:1) ::= |>sumX1_t1(0:2); 	/* line# ../benchmarks/sobel/sobel.c:93 */
    C_02(0:1) ::= |>sumY1_t1(0:2); 	/* line# ../benchmarks/sobel/sobel.c:96 */
    RG_00(0:8) ::= nmux {
        when (ST1_01d(0:1)) :  input_row_a02(0:8);
        default :  RG_00(0:8);
    };
    RG_01(0:8) ::= nmux {
        when (ST1_01d(0:1)) :  input_row_a01(0:8);
        default :  RG_01(0:8);
    };
    RG_02(0:8) ::= nmux {
        when (ST1_01d(0:1)) :  input_row_a00(0:8);
        default :  RG_02(0:8);
    };
    RG_Y(0:2) ::= nmux {
        when (ST1_01d(0:1)) :  2(0:2); 	/* line# ../benchmarks/sobel/sobel.c:64 */
        when (ST1_02d(0:1)) :  0(0:1) :: decr2u_12ot(0:1); 	/* line# ../benchmarks/sobel/sobel.c:64 */
    };
    sumX1_t1(0:10) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:85,92 */
        when (addsub12u_111ot(0:1)) :  addsub12s_11_101ot(0:10); 	/* line# ../benchmarks/sobel/sobel.c:92 */
        when (~addsub12u_111ot(0:1)) :  addsub12u_111ot(1:10); 	/* line# ../benchmarks/sobel/sobel.c:85 */
    };
    sumY1_t1(0:10) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:86,95 */
        when (addsub12s_111ot(0:1)) :  addsub12s_11_102ot(0:10); 	/* line# ../benchmarks/sobel/sobel.c:95 */
        when (~addsub12s_111ot(0:1)) :  addsub12s_111ot(1:10); 	/* line# ../benchmarks/sobel/sobel.c:86 */
    };
    add8u3i1(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:93,98 */
        when (C_01(0:1)) :  255(0:8); 	/* line# ../benchmarks/sobel/sobel.c:93 */
        when (~C_01(0:1)) :  sumX1_t1(2:8);
    };
    add8u3i2(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:96,98 */
        when (C_02(0:1)) :  255(0:8); 	/* line# ../benchmarks/sobel/sobel.c:96 */
        when (~C_02(0:1)) :  sumY1_t1(2:8);
    };
    SUM2_t(0:8) ::= nmux { 	/* line# ../benchmarks/sobel/sobel.c:98,100 */
        when (add8u3ot(0:1)) :  255(0:8); 	/* line# ../benchmarks/sobel/sobel.c:100 */
        when (~add8u3ot(0:1)) :  add8u3ot(1:8); 	/* line# ../benchmarks/sobel/sobel.c:98 */
    };
    sobel_ret_r(0:8) ::= nmux {
        when (ST1_03d(0:1)) :  ~SUM2_t(0:8); 	/* line# ../benchmarks/sobel/sobel.c:103,104 */
        default :  sobel_ret_r(0:8);
    };
    addsub12u_11_111i1(0:10) ::= nmux {
        when (ST1_03d(0:1)) :  add8u_91ot(0:9) :: RG_02(7:1); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
        when (U_02(0:1)) :  addsub12u_11_10_11ot(0:10); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    };
    addsub12u_11_111i2(0:9) ::= nmux {
        when (ST1_03d(0:1)) :  add8u1ot(0:9); 	/* line# ../benchmarks/sobel/sobel.c:71,73,85,86 */
        when (U_02(0:1)) :  0(0:1) :: RG_02(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    };
    M_49(0:2) ::= nmux {
        when (ST1_03d(0:1)) :  2(0:2);
        when (U_02(0:1)) :  1(0:2);
    };
    addsub12u_11_111_f(0:2) ::= M_49(0:2);
    addsub12u_11_10_11i1(0:8) ::= nmux {
        when (ST1_03d(0:1)) :  line_buffer_0_a_rg00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:85,86 */
        when (U_02(0:1)) :  RG_00(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    };
    TR_01(0:8) ::= nmux {
        when (ST1_03d(0:1)) :  line_buffer_2_a_rg01(0:8); 	/* line# ../benchmarks/sobel/sobel.c:86 */
        when (U_02(0:1)) :  RG_01(0:8); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    };
    addsub12u_11_10_11i2(0:9) ::= (unsigned ter(0:9))(TR_01(0:8) :: 0(0:1)); 	/* line# ../benchmarks/sobel/sobel.c:71,72,73,85,86 */
    addsub12u_11_10_11_f(0:2) ::= M_49(0:2);
    ST1_01d(0:1) ::= (unsigned ter(0:1))(~|>B01_streg(0:2));
    ST1_02d(0:1) ::= (unsigned ter(0:1))(~|>(B01_streg(0:2) ^ ST1_02(0:2)));
    ST1_03d(0:1) ::= (unsigned ter(0:1))(~|>(B01_streg(0:2) ^ ST1_03(0:2)));
    B01_streg(0:2) ::= nmux {
        when (ST1_02d(0:1)) : 
            nmux { 	/* line# ../benchmarks/sobel/sobel.c:64 */
                when (decr2u_12ot(0:1)) :  ST1_02(0:2);
                when (!decr2u_12ot(0:1)) :  ST1_03(0:2);
                default :  ST1_01(0:2);
            };
        default :  (unsigned ter(0:2))(0(0:1) :: ST1_01d(0:1));
    };
    goto ST1_01;
}

/*
#@FLIB /proj/cad/cwb-6.1/packages/asic_45.FLIB
#@LMT %AUTO%.LMT
##@CLK  100000
##@UNIT 1/10ps
##IDX NAME     LMT  KIND              BITW   DELAY  AREA
#  1  add8u      3  (u)+              8,9    3000     47
#  2  decr2u_1    2  (u)DECR           2,1    1000      2
#  3  addsub12u_11    1  (u)+,-            10,11  7400     98
#  4  addsub12s_11    1  (s)+,-            11,11  7800     97
#  5  add8u_9    1  (u)+              8,9    3000     47
#  6  addsub12u_11_11    1  (u)+,-            10,11  7400     98
#  7  addsub12u_11_10    1  (u)+,-            9,10   7400     98
#  8  addsub12u_11_10_1    1  (u)+,-            9,10   7400     98
#  9  addsub12s_11_10    2  (s)+,-            11,10  7800     97
#@END

#@MCNT %AUTO%.MCNT
##@CNT { test }
#@MCNT {
#    NAME	line_buffer[0][]
#    LIMIT	1
#    KIND	R1,W1
#    BITWIDTH	8
#    DELAY	0
#}
#@MCNT {
#    NAME	line_buffer[1][]
#    LIMIT	1
#    KIND	R1,W1
#    BITWIDTH	8
#    DELAY	0
#}
#@MCNT {
#    NAME	line_buffer[2][]
#    LIMIT	1
#    KIND	R1,W1
#    BITWIDTH	8
#    DELAY	0
#}
##@END { test }

#@MLMT %AUTO%.MLMT
##@UNIT 1/10ps
##IDX NAME     LMT  KIND      BITW[xWORD]  DELAY  ARRAY_DIV_NAME
#  1  line_buffer[0][]    1  R1,W1             8x3     0                 	
#  2  line_buffer[1][]    1  R1,W1             8x3     0                 	
#  3  line_buffer[2][]    1  R1,W1             8x3     0                 	
#@END

#@BLIB /proj/cad/cwb-6.1/packages/asic_45.BLIB
##@VERSION{2.00}
##@LIB{CWBSTDBLIB}
##@UNIT 1/10ps
#@BLIB {
#    NAME	nmux2_1
#    KIND	nmux
#    WAY	2
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	6
#    PIN_PAIR	6
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux2_2
#    KIND	nmux
#    WAY	2
#    BITWIDTH	2
#    DELAY	900
#    AREA	3
#    NET	10
#    PIN_PAIR	12
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux2_4
#    KIND	nmux
#    WAY	2
#    BITWIDTH	4
#    DELAY	1100
#    AREA	9
#    NET	20
#    PIN_PAIR	26
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_8
#    KIND	nmux
#    WAY	2
#    BITWIDTH	8
#    DELAY	1400
#    AREA	16
#    NET	36
#    PIN_PAIR	50
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_16
#    KIND	nmux
#    WAY	2
#    BITWIDTH	16
#    DELAY	1600
#    AREA	32
#    NET	70
#    PIN_PAIR	100
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux2_32
#    KIND	nmux
#    WAY	2
#    BITWIDTH	32
#    DELAY	1700
#    AREA	64
#    NET	140
#    PIN_PAIR	202
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux2_64
#    KIND	nmux
#    WAY	2
#    BITWIDTH	64
#    DELAY	1500
#    AREA	128
#    NET	275
#    PIN_PAIR	401
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux4_1
#    KIND	nmux
#    WAY	4
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux4_2
#    KIND	nmux
#    WAY	4
#    BITWIDTH	2
#    DELAY	1000
#    AREA	6
#    NET	18
#    PIN_PAIR	22
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux4_4
#    KIND	nmux
#    WAY	4
#    BITWIDTH	4
#    DELAY	1200
#    AREA	17
#    NET	36
#    PIN_PAIR	48
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_8
#    KIND	nmux
#    WAY	4
#    BITWIDTH	8
#    DELAY	1500
#    AREA	30
#    NET	64
#    PIN_PAIR	92
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_16
#    KIND	nmux
#    WAY	4
#    BITWIDTH	16
#    DELAY	1700
#    AREA	61
#    NET	124
#    PIN_PAIR	184
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_32
#    KIND	nmux
#    WAY	4
#    BITWIDTH	32
#    DELAY	1900
#    AREA	121
#    NET	248
#    PIN_PAIR	372
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux4_64
#    KIND	nmux
#    WAY	4
#    BITWIDTH	64
#    DELAY	1600
#    AREA	242
#    NET	490
#    PIN_PAIR	742
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_1
#    KIND	nmux
#    WAY	8
#    BITWIDTH	1
#    DELAY	1000
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_2
#    KIND	nmux
#    WAY	8
#    BITWIDTH	2
#    DELAY	1300
#    AREA	13
#    NET	34
#    PIN_PAIR	42
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_4
#    KIND	nmux
#    WAY	8
#    BITWIDTH	4
#    DELAY	1600
#    AREA	31
#    NET	66
#    PIN_PAIR	90
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nmux8_8
#    KIND	nmux
#    WAY	8
#    BITWIDTH	8
#    DELAY	1700
#    AREA	59
#    NET	120
#    PIN_PAIR	176
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_16
#    KIND	nmux
#    WAY	8
#    BITWIDTH	16
#    DELAY	2000
#    AREA	119
#    NET	232
#    PIN_PAIR	352
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux8_32
#    KIND	nmux
#    WAY	8
#    BITWIDTH	32
#    DELAY	2200
#    AREA	233
#    NET	463
#    PIN_PAIR	711
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux8_64
#    KIND	nmux
#    WAY	8
#    BITWIDTH	64
#    DELAY	1800
#    AREA	460
#    NET	906
#    PIN_PAIR	1410
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_1
#    KIND	nmux
#    WAY	16
#    BITWIDTH	1
#    DELAY	1500
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux16_2
#    KIND	nmux
#    WAY	16
#    BITWIDTH	2
#    DELAY	1700
#    AREA	33
#    NET	80
#    PIN_PAIR	96
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_4
#    KIND	nmux
#    WAY	16
#    BITWIDTH	4
#    DELAY	1900
#    AREA	76
#    NET	155
#    PIN_PAIR	203
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_8
#    KIND	nmux
#    WAY	16
#    BITWIDTH	8
#    DELAY	2200
#    AREA	127
#    NET	248
#    PIN_PAIR	360
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_16
#    KIND	nmux
#    WAY	16
#    BITWIDTH	16
#    DELAY	2400
#    AREA	255
#    NET	480
#    PIN_PAIR	720
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux16_32
#    KIND	nmux
#    WAY	16
#    BITWIDTH	32
#    DELAY	2700
#    AREA	506
#    NET	967
#    PIN_PAIR	1463
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux16_64
#    KIND	nmux
#    WAY	16
#    BITWIDTH	64
#    DELAY	2300
#    AREA	995
#    NET	1878
#    PIN_PAIR	2886
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux32_1
#    KIND	nmux
#    WAY	32
#    BITWIDTH	1
#    DELAY	1700
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_2
#    KIND	nmux
#    WAY	32
#    BITWIDTH	2
#    DELAY	1900
#    AREA	56
#    NET	138
#    PIN_PAIR	170
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_4
#    KIND	nmux
#    WAY	32
#    BITWIDTH	4
#    DELAY	2300
#    AREA	115
#    NET	248
#    PIN_PAIR	344
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nmux32_8
#    KIND	nmux
#    WAY	32
#    BITWIDTH	8
#    DELAY	2400
#    AREA	251
#    NET	488
#    PIN_PAIR	712
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux32_16
#    KIND	nmux
#    WAY	32
#    BITWIDTH	16
#    DELAY	2600
#    AREA	502
#    NET	944
#    PIN_PAIR	1424
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux32_32
#    KIND	nmux
#    WAY	32
#    BITWIDTH	32
#    DELAY	2900
#    AREA	982
#    NET	1877
#    PIN_PAIR	2869
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux32_64
#    KIND	nmux
#    WAY	32
#    BITWIDTH	64
#    DELAY	2700
#    AREA	1946
#    NET	3660
#    PIN_PAIR	5676
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_1
#    KIND	nmux
#    WAY	64
#    BITWIDTH	1
#    DELAY	1800
#    AREA	56
#    NET	171
#    PIN_PAIR	171
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_2
#    KIND	nmux
#    WAY	64
#    BITWIDTH	2
#    DELAY	2000
#    AREA	113
#    NET	278
#    PIN_PAIR	342
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_4
#    KIND	nmux
#    WAY	64
#    BITWIDTH	4
#    DELAY	2500
#    AREA	228
#    NET	494
#    PIN_PAIR	686
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nmux64_8
#    KIND	nmux
#    WAY	64
#    BITWIDTH	8
#    DELAY	2500
#    AREA	504
#    NET	984
#    PIN_PAIR	1432
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_16
#    KIND	nmux
#    WAY	64
#    BITWIDTH	16
#    DELAY	2600
#    AREA	1008
#    NET	1904
#    PIN_PAIR	2864
#    LSTAGE	5
#}
#@BLIB {
#    NAME	nmux64_32
#    KIND	nmux
#    WAY	64
#    BITWIDTH	32
#    DELAY	3100
#    AREA	1955
#    NET	3755
#    PIN_PAIR	5739
#    LSTAGE	6
#}
#@BLIB {
#    NAME	nmux64_64
#    KIND	nmux
#    WAY	64
#    BITWIDTH	64
#    DELAY	2800
#    AREA	3917
#    NET	7434
#    PIN_PAIR	11466
#    LSTAGE	6
#}
#@BLIB {
#    NAME	reg1
#    KIND	reg
#    BITWIDTH	1
#    AREA	6
#    NET	5
#    PIN_PAIR	5
#}
#@BLIB {
#    NAME	reg4
#    KIND	reg
#    BITWIDTH	4
#    AREA	24
#    NET	14
#    PIN_PAIR	20
#}
#@BLIB {
#    NAME	reg8
#    KIND	reg
#    BITWIDTH	8
#    AREA	48
#    NET	26
#    PIN_PAIR	40
#}
#@BLIB {
#    NAME	dec2
#    KIND	dec
#    BITWIDTH	2
#    DELAY	200
#    AREA	1
#    NET	2
#    PIN_PAIR	3
#}
#@BLIB {
#    NAME	dec4
#    KIND	dec
#    BITWIDTH	4
#    DELAY	900
#    AREA	5
#    NET	10
#    PIN_PAIR	16
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec8
#    KIND	dec
#    BITWIDTH	8
#    DELAY	1300
#    AREA	14
#    NET	18
#    PIN_PAIR	39
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dec16
#    KIND	dec
#    BITWIDTH	16
#    DELAY	1300
#    AREA	25
#    NET	37
#    PIN_PAIR	74
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec32
#    KIND	dec
#    BITWIDTH	32
#    DELAY	1800
#    AREA	42
#    NET	58
#    PIN_PAIR	138
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dec64
#    KIND	dec
#    BITWIDTH	64
#    DELAY	2000
#    AREA	78
#    NET	100
#    PIN_PAIR	258
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dec128
#    KIND	dec
#    BITWIDTH	128
#    DELAY	2500
#    AREA	149
#    NET	194
#    PIN_PAIR	483
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux2_1
#    KIND	dmux
#    WAY	2
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	4
#    PIN_PAIR	4
#    LSTAGE	1
#}
#@BLIB {
#    NAME	dmux2_16
#    KIND	dmux
#    WAY	2
#    BITWIDTH	16
#    DELAY	2000
#    AREA	32
#    NET	69
#    PIN_PAIR	100
#    LSTAGE	3
#}
#@BLIB {
#    NAME	dmux4_1
#    KIND	dmux
#    WAY	4
#    BITWIDTH	1
#    DELAY	1700
#    AREA	5
#    NET	11
#    PIN_PAIR	15
#    LSTAGE	2
#}
#@BLIB {
#    NAME	dmux4_16
#    KIND	dmux
#    WAY	4
#    BITWIDTH	16
#    DELAY	2500
#    AREA	64
#    NET	128
#    PIN_PAIR	194
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux8_1
#    KIND	dmux
#    WAY	8
#    BITWIDTH	1
#    DELAY	2800
#    AREA	11
#    NET	22
#    PIN_PAIR	33
#    LSTAGE	4
#}
#@BLIB {
#    NAME	dmux8_16
#    KIND	dmux
#    WAY	8
#    BITWIDTH	16
#    DELAY	3400
#    AREA	127
#    NET	240
#    PIN_PAIR	381
#    LSTAGE	5
#}
#@BLIB {
#    NAME	dmux16_1
#    KIND	dmux
#    WAY	16
#    BITWIDTH	1
#    DELAY	3000
#    AREA	23
#    NET	43
#    PIN_PAIR	65
#    LSTAGE	6
#}
#@BLIB {
#    NAME	dmux16_16
#    KIND	dmux
#    WAY	16
#    BITWIDTH	16
#    DELAY	3800
#    AREA	275
#    NET	499
#    PIN_PAIR	787
#    LSTAGE	9
#}
#@BLIB {
#    NAME	dmux64_1
#    KIND	dmux
#    WAY	64
#    BITWIDTH	1
#    DELAY	4300
#    AREA	87
#    NET	146
#    PIN_PAIR	234
#    LSTAGE	8
#}
#@BLIB {
#    NAME	dmux64_16
#    KIND	dmux
#    WAY	64
#    BITWIDTH	16
#    DELAY	4800
#    AREA	1075
#    NET	1971
#    PIN_PAIR	3081
#    LSTAGE	9
#}
#@BLIB {
#    NAME	dmux256_1
#    KIND	dmux
#    WAY	256
#    BITWIDTH	1
#    DELAY	5300
#    AREA	286
#    NET	519
#    PIN_PAIR	819
#    LSTAGE	11
#}
#@BLIB {
#    NAME	dmux256_16
#    KIND	dmux
#    WAY	256
#    BITWIDTH	16
#    DELAY	5900
#    AREA	4243
#    NET	7774
#    PIN_PAIR	12168
#    LSTAGE	16
#}
#@BLIB {
#    NAME	inv
#    KIND	inv
#    BITWIDTH	1
#    DELAY	300
#    AREA	1
#    NET	2
#    PIN_PAIR	2
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and2
#    KIND	and
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and4
#    KIND	and
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	and8
#    KIND	and
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	900
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	and16
#    KIND	and
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1300
#    AREA	7
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	and32
#    KIND	and
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1400
#    AREA	16
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	and64
#    KIND	and
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	2000
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	and256
#    KIND	and
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2700
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	or2
#    KIND	or
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	or4
#    KIND	or
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	700
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	or8
#    KIND	or
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	or16
#    KIND	or
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1100
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	or32
#    KIND	or
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1500
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	or64
#    KIND	or
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	1700
#    AREA	28
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	or256
#    KIND	or
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2000
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	xor2
#    KIND	xor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	7
#    PIN_PAIR	9
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xor4
#    KIND	xor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1600
#    AREA	6
#    NET	11
#    PIN_PAIR	13
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xor8
#    KIND	xor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	2400
#    AREA	11
#    NET	15
#    PIN_PAIR	15
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xor16
#    KIND	xor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	4800
#    AREA	32
#    NET	48
#    PIN_PAIR	56
#    LSTAGE	8
#}
#@BLIB {
#    NAME	xor32
#    KIND	xor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	4500
#    AREA	49
#    NET	63
#    PIN_PAIR	63
#    LSTAGE	5
#}
#@BLIB {
#    NAME	xor64
#    KIND	xor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	5400
#    AREA	100
#    NET	127
#    PIN_PAIR	127
#    LSTAGE	6
#}
#@BLIB {
#    NAME	xor256
#    KIND	xor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	7200
#    AREA	406
#    NET	511
#    PIN_PAIR	511
#    LSTAGE	8
#}
#@BLIB {
#    NAME	nand2
#    KIND	nand
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	400
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nand4
#    KIND	nand
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	600
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nand8
#    KIND	nand
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	1100
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nand16
#    KIND	nand
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1700
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nand32
#    KIND	nand
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1600
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nand64
#    KIND	nand
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	1800
#    AREA	27
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nand256
#    KIND	nand
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	3000
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	nor2
#    KIND	nor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	500
#    AREA	1
#    NET	3
#    PIN_PAIR	3
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nor4
#    KIND	nor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1000
#    AREA	1
#    NET	5
#    PIN_PAIR	5
#    LSTAGE	1
#}
#@BLIB {
#    NAME	nor8
#    KIND	nor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	1400
#    AREA	3
#    NET	11
#    PIN_PAIR	11
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nor16
#    KIND	nor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	1600
#    AREA	6
#    NET	21
#    PIN_PAIR	21
#    LSTAGE	2
#}
#@BLIB {
#    NAME	nor32
#    KIND	nor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	1800
#    AREA	14
#    NET	43
#    PIN_PAIR	43
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nor64
#    KIND	nor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	2300
#    AREA	27
#    NET	85
#    PIN_PAIR	85
#    LSTAGE	3
#}
#@BLIB {
#    NAME	nor256
#    KIND	nor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	2900
#    AREA	113
#    NET	341
#    PIN_PAIR	341
#    LSTAGE	4
#}
#@BLIB {
#    NAME	xnor2
#    KIND	xnor
#    INPUTNUM	2
#    BITWIDTH	1
#    DELAY	800
#    AREA	3
#    NET	7
#    PIN_PAIR	9
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xnor4
#    KIND	xnor
#    INPUTNUM	4
#    BITWIDTH	1
#    DELAY	1600
#    AREA	4
#    NET	7
#    PIN_PAIR	7
#    LSTAGE	2
#}
#@BLIB {
#    NAME	xnor8
#    KIND	xnor
#    INPUTNUM	8
#    BITWIDTH	1
#    DELAY	2600
#    AREA	11
#    NET	15
#    PIN_PAIR	15
#    LSTAGE	3
#}
#@BLIB {
#    NAME	xnor16
#    KIND	xnor
#    INPUTNUM	16
#    BITWIDTH	1
#    DELAY	4200
#    AREA	42
#    NET	58
#    PIN_PAIR	75
#    LSTAGE	13
#}
#@BLIB {
#    NAME	xnor32
#    KIND	xnor
#    INPUTNUM	32
#    BITWIDTH	1
#    DELAY	4500
#    AREA	49
#    NET	63
#    PIN_PAIR	63
#    LSTAGE	5
#}
#@BLIB {
#    NAME	xnor64
#    KIND	xnor
#    INPUTNUM	64
#    BITWIDTH	1
#    DELAY	5400
#    AREA	100
#    NET	127
#    PIN_PAIR	127
#    LSTAGE	6
#}
#@BLIB {
#    NAME	xnor256
#    KIND	xnor
#    INPUTNUM	256
#    BITWIDTH	1
#    DELAY	7200
#    AREA	406
#    NET	511
#    PIN_PAIR	511
#    LSTAGE	8
#}
#@BLIB {
#    NAME	consttable2_8
#    KIND	consttable
#    SIZE	2
#    BITWIDTH	8
#    DELAY	200
#    AREA	1
#    NET	4
#    PIN_PAIR	9
#}
#@BLIB {
#    NAME	consttable2_32
#    KIND	consttable
#    SIZE	2
#    BITWIDTH	32
#    DELAY	600
#    AREA	1
#    NET	5
#    PIN_PAIR	34
#    LSTAGE	1
#}
#@BLIB {
#    NAME	consttable16_8
#    KIND	consttable
#    SIZE	16
#    BITWIDTH	8
#    DELAY	3000
#    AREA	50
#    NET	53
#    PIN_PAIR	122
#    LSTAGE	6
#}
#@BLIB {
#    NAME	consttable16_32
#    KIND	consttable
#    SIZE	16
#    BITWIDTH	32
#    DELAY	3400
#    AREA	120
#    NET	130
#    PIN_PAIR	317
#    LSTAGE	9
#}
#@BLIB {
#    NAME	consttable64_8
#    KIND	consttable
#    SIZE	64
#    BITWIDTH	8
#    DELAY	4900
#    AREA	146
#    NET	162
#    PIN_PAIR	387
#    LSTAGE	9
#}
#@BLIB {
#    NAME	consttable64_32
#    KIND	consttable
#    SIZE	64
#    BITWIDTH	32
#    DELAY	5000
#    AREA	392
#    NET	434
#    PIN_PAIR	1020
#    LSTAGE	13
#}
#@BLIB {
#    NAME	consttable256_8
#    KIND	consttable
#    SIZE	256
#    BITWIDTH	8
#    DELAY	6100
#    AREA	476
#    NET	482
#    PIN_PAIR	1203
#    LSTAGE	14
#}
#@BLIB {
#    NAME	consttable256_32
#    KIND	consttable
#    SIZE	256
#    BITWIDTH	32
#    DELAY	5800
#    AREA	1350
#    NET	1466
#    PIN_PAIR	3523
#    LSTAGE	12
#}
##@END{CWBSTDBLIB}
#@END
*/
